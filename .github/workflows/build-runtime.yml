name: Docker Runtime

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - 'dev/**'

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

# env:
  # TODO: Change variable to your image's name.
  # IMAGE_NAME: runtime

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    strategy:
        matrix:
          php:
            - 8.2
            - 8.3
            - 8.4
          image_version:
            - runtime
            - sdk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file ./${{ matrix.php }}/${{ matrix.image_version }}/Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    strategy:
      matrix:
        php:
          - 8.2
          - 8.3
          - 8.4
        image_version:
          - runtime
          - sdk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: | 
          docker build . --file ./${{ matrix.php }}/${{ matrix.image_version }}/Dockerfile \
          --tag ${{ matrix.php }}-${{ matrix.image_version }} \
          --label org.opencontainers.image.source="${{ github.repository }}" \
          --label org.opencontainers.image.version="${{ matrix.php }}" \
          --label org.opencontainers.image.revision="${{ github.sha }}" \
          --label org.opencontainers.image.created="$(date --rfc-3339=seconds)" \
          --label org.opencontainers.image.title="${{ matrix.php }}-${{ matrix.image_version }}" \
          --label org.opencontainers.image.description="Docker image for PHP ${{ matrix.php }} ${{ matrix.image_version }}"

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/${{ matrix.image_version }}
          IMAGE_NAME=${{ matrix.php }}-${{ matrix.image_version }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          VERSION=${{ matrix.php }}

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          # [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=${{ matrix.php }}

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
